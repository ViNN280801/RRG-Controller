name: Linter

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install Python dependencies
        run: |
          pip install flake8
          pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Run flake8 (Python linting)
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
        run: |
          flake8 . --count --max-line-length=120 --statistics

      - name: Install C linter (cppcheck)
        run: |
          sudo apt-get update
          sudo apt-get install -y cppcheck

      - name: Cache apt lists
        uses: actions/cache@v4
        with:
          path: /var/lib/apt/lists
          key: ${{ runner.os }}-apt-lists-${{ hashFiles('CMakeLists.txt') }}

      - name: Run cppcheck (C linting)
        run: |
          # Lint all C files in the repository.
          cppcheck --enable=warning,style,performance,portability --inconclusive --quiet .
